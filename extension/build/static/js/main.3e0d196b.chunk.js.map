{"version":3,"sources":["logo.svg","ChromeAPI.js","FaviconAPI.js","App.js","reportWebVitals.js","index.js"],"names":["key","a","get","host","fetch","response","blob","Promise","resolve","reader","FileReader","readAsDataURL","onloadend","data","result","console","log","App","useState","foo","setFoo","image","setImage","storageGet","then","val","getFavicon","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,MAA0B,iC,2ECAlC,WAA0BA,GAA1B,SAAAC,EAAA,sEAEUC,IAAIF,GAFd,oF,kECAA,WAA0BG,GAA1B,iBAAAF,EAAA,sEACkBG,MAAM,uDAAyDD,GADjF,cACCE,EADD,gBAEcA,EAASC,OAFvB,cAECA,EAFD,yBAGI,IAAIC,SAAQ,SAAAC,GACf,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,cAAcL,GACrBG,EAAOG,UAAY,WACf,IAAIC,EAAOJ,EAAOK,OAClBC,QAAQC,IAAIH,GACZL,EAAQK,QATb,4C,sBCyCQI,MAnCf,WAAgB,IAAD,EACSC,mBAAS,QADlB,mBACNC,EADM,KACDC,EADC,OAEaF,mBAAS,MAFtB,mBAENG,EAFM,KAECC,EAFD,KAQb,OFdK,SAAP,kCEUEC,CAAW,OAAOC,MAAK,SAAAC,GAAG,OAAIL,EAAOK,MDVhC,SAAP,kCCYEC,CAAW,mBAAmBF,MAAK,SAAAX,GAAI,OAAIS,EAAST,MAGlD,qBAAKc,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,8CACgBd,KAEhB,yCAEGE,EAAQ,qBAAKO,IAAG,iCAA4BP,KAAc,qBCtBtDa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e0d196b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export async function storageGet(key) {\r\n    // eslint-disable-next-line no-undef\r\n    return await get(key);\r\n}\r\n\r\nexport async function storageSet(key, val) {\r\n    // eslint-disable-next-line no-undef\r\n    return await set(key, val);\r\n}\r\n","export async function getFavicon(host) {\r\n    let response = await fetch(\"https://s2.googleusercontent.com/s2/favicons?domain=\" + host);\r\n    let blob = await response.blob();\r\n    return new Promise(resolve => {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(blob);\r\n        reader.onloadend = function() {\r\n            let data = reader.result;\r\n            console.log(data);\r\n            resolve(data);\r\n        }\r\n    });\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\nimport {storageGet} from \"./ChromeAPI\";\nimport {getFavicon} from \"./FaviconAPI\";\n\nfunction App() {\n  const [foo, setFoo] = useState(\"null\");\n  const [image, setImage] = useState(null);\n\n  storageGet(\"key\").then(val => setFoo(val));\n\n  getFavicon(\"mail.google.com\").then(data => setImage(data));\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <p>\n          Stored test: {foo}\n        </p>\n        <p>\n          Favicon:\n          {image ? <img src={`data:image/png;base64,$${image}`} /> : \"No image!\"}\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}